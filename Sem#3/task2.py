# üìå –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–∞—Ö –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.
# üìå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã: "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
# üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ö–Ω–∏–≥–∏" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è,
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∏ id –∞–≤—Ç–æ—Ä–∞.
# üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ê–≤—Ç–æ—Ä—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è.
# üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
# üìå –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å
# —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö –∞–≤—Ç–æ—Ä–æ–≤.

from flask import Flask, render_template, request
from flask_sqlalchemy import SQLAlchemy


task2 = Flask(__name__)
task2.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///mybooks.db'
db = SQLAlchemy(task2)

class Book(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String, unique=True, nullable=False)
    publ_year = db.Column(db.Integer, nullable=False)
    copies = db.Column(db.Integer, default=0)
    author_id = db.Column(db.String, db.ForeignKey('author.id'))

class Author(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String, unique=True, nullable=False)
    surname = db.Column(db.String, unique=True, nullable=False)
    books = db.relationship('Book', backref='author', lazy=True)

db.create_all()

author1 = Author(name='Vanya', surname='Vanyov')
author2 = Author(name='Petya', surname='Petyov')
author3 = Author(name='Sasha', surname='Sashov')

book1 = Book(name='Revolution', publ_year=2023, copies=140_000_000, author_id=author1)
book2 = Book(name='Evolution', publ_year=2024, copies=130_000_000, author_id=author2)
book3 = Book(name='Pollution', publ_year=2025, copies=10_000_000, author_id=author3)

db.session.add(author1, author2, author3, book1, book2, book3)
db.session.commit()


if __name__ == '__main__':
    task2.run(debug=True)
